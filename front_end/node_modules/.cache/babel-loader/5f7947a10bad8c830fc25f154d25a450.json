{"ast":null,"code":"var _jsxFileName = \"D:\\\\pokemon\\\\front_end\\\\src\\\\component\\\\DetailPokemon\\\\DetailPokemon.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'antd';\nimport 'antd/dist/antd.css';\nimport './DetailPokemon.css';\nimport { callApidata } from '../../api/callAPI';\nimport { Link } from 'react-router-dom';\nimport { DetailInfor } from './DPstore';\nimport { observer } from 'mobx-react';\nimport Type from '../elements/Type';\nimport Stats from '../elements/Stats';\nimport Axios from 'axios';\n\nfunction Detail(props) {\n  function habitat(habitat) {\n    if (detail.habitat.name !== undefined) {\n      return /*#__PURE__*/React.createElement(Col, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/habitat/' + detail.habitat.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 32\n        }\n      }, \"habitat : \", detail.habitat.name));\n    }\n  }\n\n  function eve(string) {\n    Axios.get(string).then(res => {\n      if (res.data.evolves_from_species !== null) {\n        let name = res.data.evolves_from_species.name;\n        callApidata(name, 'pokemon').then(res => {\n          DetailInfor.addEvolution({\n            name: res.data.name,\n            img: res.data.sprites.front_default\n          });\n          eve(res.data.species.url);\n        });\n      }\n    });\n  }\n\n  function showflavor_text() {\n    if (detail !== {}) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, detail.flavor_text_entries[0].flavor_text);\n    }\n  }\n\n  function show(list) {\n    let result = null;\n\n    if (list.length > 0) {\n      result = list.map((value, index) => {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: '/pokemon/' + value.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }\n        }, value.name), /*#__PURE__*/React.createElement(\"img\", {\n          src: value.img,\n          alt: value.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }\n        })));\n      });\n    }\n\n    return result;\n  }\n\n  function showvarieties() {\n    let result = null;\n    result = detail.varieties.map(value => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: value.pokemon.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, value.pokemon.name);\n    });\n    return result;\n  }\n\n  function changevarieties(e) {\n    setS(e.target.value);\n    callApidata(e.target.value, 'pokemon').then(res => {\n      setIF(res.data);\n    });\n  }\n\n  function add() {\n    console.log(detail.name);\n    Axios.post('/add', {\n      name: detail.name\n    });\n  }\n\n  useEffect(() => {\n    callApidata(props.match.params.id, 'pokemon').then(res => {\n      setIF(res.data);\n      callApidata(res.data.id + 1, 'pokemon').then(res => {\n        setN(res.data.name);\n      });\n      callApidata(res.data.id - 1, 'pokemon').then(res => {\n        setP(res.data.name);\n      });\n      DetailInfor.changelist([], []);\n      let type = res.data.types;\n      res.data.types.forEach(element => {\n        callApidata(element.type.name, 'type').then(res => {\n          res.data.damage_relations.double_damage_from.forEach((value, index) => {\n            if (type.findIndex(data => data.type.name === value.name) === -1) {\n              DetailInfor.addWeaknesses(value.name);\n            }\n          });\n        });\n      });\n      DetailInfor.addEvolution({\n        name: res.data.name,\n        img: res.data.sprites.front_default\n      });\n      eve(res.data.species.url);\n      Axios.get(res.data.species.url).then(res => {\n        setD(res.data);\n        setS(res.data.name);\n      });\n    });\n  }, [props]);\n  const [inforPokemon, setIF] = useState({});\n  const [detail, setD] = useState({});\n  const [next, setN] = useState('');\n  const [prev, setP] = useState('');\n  const [select, setS] = useState('');\n\n  if (inforPokemon.sprites !== undefined && detail.flavor_text_entries !== undefined) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/pokemon/' + prev,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 47\n      }\n    }, \"prev\")), /*#__PURE__*/React.createElement(Link, {\n      to: '/pokemon/' + next,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 47\n      }\n    }, \"next\")), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"compare\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"add\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nameP\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, detail.name, \" #\", detail.id)), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"lang\",\n      value: select,\n      onChange: changevarieties,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, showvarieties())), /*#__PURE__*/React.createElement(Row, {\n      gutter: [16, 16],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"gray\",\n      src: inforPokemon.sprites.front_default,\n      alt: \"abc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Stats, {\n      data: inforPokemon.stats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, showflavor_text(), /*#__PURE__*/React.createElement(Row, {\n      className: \"inforbasic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }, \"height : \", inforPokemon.height), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, \"width : \", inforPokemon.weight), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, \"experience : \", inforPokemon.base_experience), habitat(detail.habitat)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, \"abilities :\"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, inforPokemon.abilities.map((values, index) => /*#__PURE__*/React.createElement(Col, {\n      key: index,\n      span: 11,\n      className: \"abilities\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/ability/' + values.ability.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, values.ability.name)))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \"types :  \"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }, inforPokemon.types.map((values, index) => /*#__PURE__*/React.createElement(Type, {\n      key: index,\n      values: values.type.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, \"Weaknesses :\"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, DetailInfor.Weaknesses.map((values, index) => /*#__PURE__*/React.createElement(Type, {\n      key: index,\n      values: values,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 20\n      }\n    }, \"Evolutions\")), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, show(DetailInfor.Evolution)));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    });\n  }\n}\n\nexport default observer(Detail);","map":{"version":3,"sources":["D:/pokemon/front_end/src/component/DetailPokemon/DetailPokemon.js"],"names":["React","useEffect","useState","Row","Col","callApidata","Link","DetailInfor","observer","Type","Stats","Axios","Detail","props","habitat","detail","name","undefined","eve","string","get","then","res","data","evolves_from_species","addEvolution","img","sprites","front_default","species","url","showflavor_text","flavor_text_entries","flavor_text","show","list","result","length","map","value","index","showvarieties","varieties","pokemon","changevarieties","e","setS","target","setIF","add","console","log","post","match","params","id","setN","setP","changelist","type","types","forEach","element","damage_relations","double_damage_from","findIndex","addWeaknesses","setD","inforPokemon","next","prev","select","stats","height","weight","base_experience","abilities","values","ability","Weaknesses","Evolution"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,OAAO,oBAAP;AACA,OAAO,qBAAP;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,WAASC,OAAT,CAAiBA,OAAjB,EAA0B;AACtB,QAAIC,MAAM,CAACD,OAAP,CAAeE,IAAf,KAAwBC,SAA5B,EAAuC;AACnC,0BACI,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAe,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE,cAAcF,MAAM,CAACD,OAAP,CAAeE,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAwDD,MAAM,CAACD,OAAP,CAAeE,IAAvE,CAAf,CADJ;AAGH;AACJ;;AACD,WAASE,GAAT,CAAaC,MAAb,EAAqB;AACjBR,IAAAA,KAAK,CAACS,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBC,GAAG,IAAI;AAC1B,UAAIA,GAAG,CAACC,IAAJ,CAASC,oBAAT,KAAkC,IAAtC,EAA4C;AACxC,YAAIR,IAAI,GAAGM,GAAG,CAACC,IAAJ,CAASC,oBAAT,CAA8BR,IAAzC;AACAX,QAAAA,WAAW,CAACW,IAAD,EAAO,SAAP,CAAX,CAA6BK,IAA7B,CAAkCC,GAAG,IAAI;AACrCf,UAAAA,WAAW,CAACkB,YAAZ,CAAyB;AAAET,YAAAA,IAAI,EAAEM,GAAG,CAACC,IAAJ,CAASP,IAAjB;AAAuBU,YAAAA,GAAG,EAAEJ,GAAG,CAACC,IAAJ,CAASI,OAAT,CAAiBC;AAA7C,WAAzB;AACAV,UAAAA,GAAG,CAACI,GAAG,CAACC,IAAJ,CAASM,OAAT,CAAiBC,GAAlB,CAAH;AACH,SAHD;AAIH;AACJ,KARD;AASH;;AACD,WAASC,eAAT,GAA2B;AACvB,QAAIhB,MAAM,KAAK,EAAf,EAAmB;AACf,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,MAAM,CAACiB,mBAAP,CAA2B,CAA3B,EAA8BC,WAAlC,CADJ;AAGH;AACJ;;AACD,WAASC,IAAT,CAAcC,IAAd,EAAoB;AAChB,QAAIC,MAAM,GAAG,IAAb;;AACA,QAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACjBD,MAAAA,MAAM,GAAGD,IAAI,CAACG,GAAL,CAAS,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAChC,4BACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAE,cAAYD,KAAK,CAACvB,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAI,UAAA,GAAG,EAAEwB,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,KAAK,CAACvB,IAAV,CADJ,eAEI;AAAK,UAAA,GAAG,EAAEuB,KAAK,CAACb,GAAhB;AAAqB,UAAA,GAAG,EAAEa,KAAK,CAACvB,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ,CADJ;AAQH,OATQ,CAAT;AAUH;;AACD,WAAOoB,MAAP;AACH;;AACD,WAASK,aAAT,GAAyB;AACrB,QAAIL,MAAM,GAAG,IAAb;AACAA,IAAAA,MAAM,GAAGrB,MAAM,CAAC2B,SAAP,CAAiBJ,GAAjB,CAAqBC,KAAK,IAAI;AACnC,0BACI;AAAQ,QAAA,KAAK,EAAEA,KAAK,CAACI,OAAN,CAAc3B,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCuB,KAAK,CAACI,OAAN,CAAc3B,IAAlD,CADJ;AAGH,KAJQ,CAAT;AAKA,WAAOoB,MAAP;AACH;;AACD,WAASQ,eAAT,CAAyBC,CAAzB,EAA4B;AACxBC,IAAAA,IAAI,CAACD,CAAC,CAACE,MAAF,CAASR,KAAV,CAAJ;AACAlC,IAAAA,WAAW,CAACwC,CAAC,CAACE,MAAF,CAASR,KAAV,EAAiB,SAAjB,CAAX,CAAuClB,IAAvC,CAA4CC,GAAG,IAAI;AAC/C0B,MAAAA,KAAK,CAAC1B,GAAG,CAACC,IAAL,CAAL;AACH,KAFD;AAGH;;AACD,WAAS0B,GAAT,GAAc;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYpC,MAAM,CAACC,IAAnB;AACAL,IAAAA,KAAK,CAACyC,IAAN,CAAW,MAAX,EAAkB;AAACpC,MAAAA,IAAI,EAACD,MAAM,CAACC;AAAb,KAAlB;AACH;;AACDf,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,WAAW,CAACQ,KAAK,CAACwC,KAAN,CAAYC,MAAZ,CAAmBC,EAApB,EAAwB,SAAxB,CAAX,CAA8ClC,IAA9C,CAAmDC,GAAG,IAAI;AACtD0B,MAAAA,KAAK,CAAC1B,GAAG,CAACC,IAAL,CAAL;AACAlB,MAAAA,WAAW,CAACiB,GAAG,CAACC,IAAJ,CAASgC,EAAT,GAAc,CAAf,EAAkB,SAAlB,CAAX,CAAwClC,IAAxC,CAA6CC,GAAG,IAAI;AAChDkC,QAAAA,IAAI,CAAClC,GAAG,CAACC,IAAJ,CAASP,IAAV,CAAJ;AACH,OAFD;AAGAX,MAAAA,WAAW,CAACiB,GAAG,CAACC,IAAJ,CAASgC,EAAT,GAAc,CAAf,EAAkB,SAAlB,CAAX,CAAwClC,IAAxC,CAA6CC,GAAG,IAAI;AAChDmC,QAAAA,IAAI,CAACnC,GAAG,CAACC,IAAJ,CAASP,IAAV,CAAJ;AACH,OAFD;AAGAT,MAAAA,WAAW,CAACmD,UAAZ,CAAuB,EAAvB,EAA2B,EAA3B;AACA,UAAIC,IAAI,GAAGrC,GAAG,CAACC,IAAJ,CAASqC,KAApB;AAEAtC,MAAAA,GAAG,CAACC,IAAJ,CAASqC,KAAT,CAAeC,OAAf,CAAuBC,OAAO,IAAI;AAC9BzD,QAAAA,WAAW,CAACyD,OAAO,CAACH,IAAR,CAAa3C,IAAd,EAAoB,MAApB,CAAX,CAAuCK,IAAvC,CAA4CC,GAAG,IAAI;AAC/CA,UAAAA,GAAG,CAACC,IAAJ,CAASwC,gBAAT,CAA0BC,kBAA1B,CAA6CH,OAA7C,CAAqD,CAACtB,KAAD,EAAQC,KAAR,KAAkB;AACnE,gBAAImB,IAAI,CAACM,SAAL,CAAe1C,IAAI,IAAIA,IAAI,CAACoC,IAAL,CAAU3C,IAAV,KAAmBuB,KAAK,CAACvB,IAAhD,MAA0D,CAAC,CAA/D,EAAkE;AAC9DT,cAAAA,WAAW,CAAC2D,aAAZ,CAA0B3B,KAAK,CAACvB,IAAhC;AACH;AACJ,WAJD;AAKH,SAND;AAOH,OARD;AASAT,MAAAA,WAAW,CAACkB,YAAZ,CAAyB;AAAET,QAAAA,IAAI,EAAEM,GAAG,CAACC,IAAJ,CAASP,IAAjB;AAAuBU,QAAAA,GAAG,EAAEJ,GAAG,CAACC,IAAJ,CAASI,OAAT,CAAiBC;AAA7C,OAAzB;AACAV,MAAAA,GAAG,CAACI,GAAG,CAACC,IAAJ,CAASM,OAAT,CAAiBC,GAAlB,CAAH;AACAnB,MAAAA,KAAK,CAACS,GAAN,CAAUE,GAAG,CAACC,IAAJ,CAASM,OAAT,CAAiBC,GAA3B,EAAgCT,IAAhC,CAAqCC,GAAG,IAAI;AACxC6C,QAAAA,IAAI,CAAC7C,GAAG,CAACC,IAAL,CAAJ;AACAuB,QAAAA,IAAI,CAACxB,GAAG,CAACC,IAAJ,CAASP,IAAV,CAAJ;AACH,OAHD;AAIH,KA1BD;AA2BH,GA5BQ,EA4BN,CAACH,KAAD,CA5BM,CAAT;AA6BA,QAAM,CAACuD,YAAD,EAAepB,KAAf,IAAwB9C,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,MAAD,EAASoD,IAAT,IAAiBjE,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACmE,IAAD,EAAOb,IAAP,IAAetD,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACoE,IAAD,EAAOb,IAAP,IAAevD,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACqE,MAAD,EAASzB,IAAT,IAAiB5C,QAAQ,CAAC,EAAD,CAA/B;;AACA,MAAIkE,YAAY,CAACzC,OAAb,KAAyBV,SAAzB,IAAsCF,MAAM,CAACiB,mBAAP,KAA+Bf,SAAzE,EAAoF;AAChF,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,cAAcqD,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA9B,CADJ,eAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,cAAcD,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA9B,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,eAII;AAAQ,MAAA,OAAO,EAAEpB,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,eAKI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIlC,MAAM,CAACC,IAAX,QAAmBD,MAAM,CAACwC,EAA1B,CAAJ,CADJ,eAEI;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAEgB,MAAzB;AAAiC,MAAA,QAAQ,EAAE3B,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,aAAa,EADlB,CAFJ,CALJ,eAWI,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,CAAC,EAAD,EAAK,EAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAE2B,YAAY,CAACzC,OAAb,CAAqBC,aAAhD;AAA+D,MAAA,GAAG,EAAC,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEwC,YAAY,CAACI,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAKI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKzC,eAAe,EADpB,eAEI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyBqC,YAAY,CAACK,MAAtC,CADJ,eAEI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAwBL,YAAY,CAACM,MAArC,CAFJ,eAGI,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA6BN,YAAY,CAACO,eAA1C,CAHJ,EAIK7D,OAAO,CAACC,MAAM,CAACD,OAAR,CAJZ,CAFJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARJ,eASI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKsD,YAAY,CAACQ,SAAb,CAAuBtC,GAAvB,CAA2B,CAACuC,MAAD,EAASrC,KAAT,kBACxB,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,IAAI,EAAE,EAAvB;AAA2B,MAAA,SAAS,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,cAAcqC,MAAM,CAACC,OAAP,CAAe9D,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8C6D,MAAM,CAACC,OAAP,CAAe9D,IAA7D,CADJ,CADH,CADL,CATJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhBJ,eAiBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKoD,YAAY,CAACR,KAAb,CAAmBtB,GAAnB,CAAuB,CAACuC,MAAD,EAASrC,KAAT,kBACpB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,MAAM,EAAEqC,MAAM,CAAClB,IAAP,CAAY3C,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CAjBJ,eAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBJ,eAuBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKT,WAAW,CAACwE,UAAZ,CAAuBzC,GAAvB,CAA2B,CAACuC,MAAD,EAASrC,KAAT,kBACxB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAX;AAAkB,MAAA,MAAM,EAAEqC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CAvBJ,CALJ,CAXJ,eA8CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,CA9CJ,eA+CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK3C,IAAI,CAAC3B,WAAW,CAACyE,SAAb,CADT,CA/CJ,CADJ;AAqDH,GAtDD,MAsDO;AACH,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;AAEJ;;AACD,eAAexE,QAAQ,CAACI,MAAD,CAAvB","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './DetailPokemon.css'\r\nimport { callApidata } from '../../api/callAPI';\r\nimport { Link } from 'react-router-dom'\r\nimport { DetailInfor } from './DPstore';\r\nimport { observer } from 'mobx-react'\r\nimport Type from '../elements/Type';\r\nimport Stats from '../elements/Stats';\r\nimport Axios from 'axios';\r\nfunction Detail(props) {\r\n    function habitat(habitat) {\r\n        if (detail.habitat.name !== undefined) {\r\n            return (\r\n                <Col span={12}><Link to={'/habitat/' + detail.habitat.name}>habitat : {detail.habitat.name}</Link></Col>\r\n            )\r\n        }\r\n    }\r\n    function eve(string) {\r\n        Axios.get(string).then(res => {\r\n            if (res.data.evolves_from_species !== null) {\r\n                let name = res.data.evolves_from_species.name\r\n                callApidata(name, 'pokemon').then(res => {\r\n                    DetailInfor.addEvolution({ name: res.data.name, img: res.data.sprites.front_default })\r\n                    eve(res.data.species.url)\r\n                })\r\n            }\r\n        })\r\n    }\r\n    function showflavor_text() {\r\n        if (detail !== {}) {\r\n            return (\r\n                <p>{detail.flavor_text_entries[0].flavor_text}</p>\r\n            )\r\n        }\r\n    }\r\n    function show(list) {\r\n        let result = null\r\n        if (list.length > 0) {\r\n            result = list.map((value, index) => {\r\n                return (\r\n                    <Link to={'/pokemon/'+value.name}>\r\n                        <li key={index}>\r\n                            <p>{value.name}</p>\r\n                            <img src={value.img} alt={value.name}></img>\r\n                        </li>\r\n                    </Link>\r\n                )\r\n            })\r\n        }\r\n        return result\r\n    }\r\n    function showvarieties() {\r\n        let result = null\r\n        result = detail.varieties.map(value => {\r\n            return (\r\n                <option value={value.pokemon.name}>{value.pokemon.name}</option>\r\n            )\r\n        })\r\n        return result\r\n    }\r\n    function changevarieties(e) {\r\n        setS(e.target.value)\r\n        callApidata(e.target.value, 'pokemon').then(res => {\r\n            setIF(res.data)\r\n        })\r\n    }\r\n    function add(){\r\n        console.log(detail.name)\r\n        Axios.post('/add',{name:detail.name})\r\n    }\r\n    useEffect(() => {\r\n        callApidata(props.match.params.id, 'pokemon').then(res => {\r\n            setIF(res.data)\r\n            callApidata(res.data.id + 1, 'pokemon').then(res => {\r\n                setN(res.data.name)\r\n            })\r\n            callApidata(res.data.id - 1, 'pokemon').then(res => {\r\n                setP(res.data.name)\r\n            })\r\n            DetailInfor.changelist([], [])\r\n            let type = res.data.types\r\n\r\n            res.data.types.forEach(element => {\r\n                callApidata(element.type.name, 'type').then(res => {\r\n                    res.data.damage_relations.double_damage_from.forEach((value, index) => {\r\n                        if (type.findIndex(data => data.type.name === value.name) === -1) {\r\n                            DetailInfor.addWeaknesses(value.name)\r\n                        }\r\n                    })\r\n                })\r\n            });\r\n            DetailInfor.addEvolution({ name: res.data.name, img: res.data.sprites.front_default })\r\n            eve(res.data.species.url)\r\n            Axios.get(res.data.species.url).then(res => {\r\n                setD(res.data)\r\n                setS(res.data.name)\r\n            })\r\n        })\r\n    }, [props])\r\n    const [inforPokemon, setIF] = useState({})\r\n    const [detail, setD] = useState({})\r\n    const [next, setN] = useState('')\r\n    const [prev, setP] = useState('')\r\n    const [select, setS] = useState('')\r\n    if (inforPokemon.sprites !== undefined && detail.flavor_text_entries !== undefined) {\r\n        return (\r\n            <div className=\"detail\">\r\n                <Link to={'/pokemon/' + prev}><button>prev</button></Link>\r\n                <Link to={'/pokemon/' + next}><button>next</button></Link>\r\n                <button>compare</button>\r\n                <button onClick={add}>add</button>\r\n                <div className='nameP'>\r\n                    <p ><b>{detail.name} #{detail.id}</b></p>\r\n                    <select id=\"lang\" value={select} onChange={changevarieties} >\r\n                        {showvarieties()}\r\n                    </select>\r\n                </div>\r\n                <Row gutter={[16, 16]}>\r\n                    <Col span={12} >\r\n                        <img className=\"gray\" src={inforPokemon.sprites.front_default} alt=\"abc\"></img>\r\n                        <Stats data={inforPokemon.stats} />\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        {showflavor_text()}\r\n                        <Row className=\"inforbasic\" >\r\n                            <Col span={12}>height : {inforPokemon.height}</Col>\r\n                            <Col span={12}>width : {inforPokemon.weight}</Col>\r\n                            <Col span={12}>experience : {inforPokemon.base_experience}</Col>\r\n                            {habitat(detail.habitat)}\r\n                        </Row>\r\n                        <p>abilities :</p>\r\n                        <Row >\r\n                            {inforPokemon.abilities.map((values, index) =>\r\n                                <Col key={index} span={11} className=\"abilities\">\r\n                                    <Link to={'/ability/' + values.ability.name}>{values.ability.name}</Link>\r\n                                </Col>\r\n                            )}\r\n                        </Row>\r\n                        <p>types :  </p>\r\n                        <Row>\r\n                            {inforPokemon.types.map((values, index) =>\r\n                                <Type key={index} values={values.type.name} />\r\n                            )}\r\n                        </Row>\r\n                        <p>Weaknesses :</p>\r\n                        <Row>\r\n                            {DetailInfor.Weaknesses.map((values, index) =>\r\n                                <Type key={index} values={values} />\r\n                            )}\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <p><b>Evolutions</b></p>\r\n                <ul>\r\n                    {show(DetailInfor.Evolution)}\r\n                </ul>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default observer(Detail)"]},"metadata":{},"sourceType":"module"}
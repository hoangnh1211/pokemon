{"ast":null,"code":"var _jsxFileName = \"D:\\\\pokemon\\\\front_end\\\\src\\\\component\\\\DetailPokemon\\\\DetailPokemon.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'antd';\nimport 'antd/dist/antd.css';\nimport './DetailPokemon.css';\nimport { callApidata } from '../../api/callAPI';\nimport { Link } from 'react-router-dom';\nimport { ListEvolution } from './DPstore';\nimport { observer } from 'mobx-react';\nimport { show } from '../ShowPokemon/show';\nimport { List } from 'antd/lib/form/Form';\n\nfunction Detail(props) {\n  function habitat(habitat) {\n    if (habitat !== null) {\n      return /*#__PURE__*/React.createElement(Col, {\n        span: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: '/habitat/' + detail.habitat.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 32\n        }\n      }, \"habitat : \", detail.habitat.name));\n    }\n  }\n\n  function eve(string) {\n    callApidata(string, 'pokemon-species').then(res => {\n      if (res.data.evolves_from_species !== null) {\n        let name = res.data.evolves_from_species.name;\n        callApidata(name, 'pokemon').then(res => {\n          console.log(res.data);\n          ListEvolution.addTodo({\n            name: res.data.name,\n            img: res.data.sprites.front_default\n          });\n          eve(res.data.name);\n        });\n      }\n    });\n  }\n\n  function show(list) {\n    let result = null;\n\n    if (list.length > 0) {\n      result = list.map(value => {\n        re;\n      });\n    }\n  }\n\n  useEffect(() => {\n    callApidata(props.match.params.id, 'pokemon').then(res => {\n      setIF(res.data);\n      callApidata(res.data.id + 1, 'pokemon').then(res => {\n        setN(res.data.name);\n      });\n      callApidata(res.data.id - 1, 'pokemon').then(res => {\n        setP(res.data.name);\n      });\n      ListEvolution.changelist([]);\n      ListEvolution.addTodo({\n        name: res.data.name,\n        img: res.data.sprites.front_default\n      });\n      eve(res.data.name);\n    });\n    callApidata(props.match.params.id, 'pokemon-species').then(res => {\n      setD(res.data);\n    });\n  }, [props]);\n  console.log(ListEvolution.list);\n  const [inforPokemon, setIF] = useState({});\n  const [detail, setD] = useState({});\n  const [next, setN] = useState('');\n  const [prev, setP] = useState('');\n\n  if (inforPokemon.sprites !== undefined && detail.habitat !== undefined) {\n    return /*#__PURE__*/React.createElement(Row, {\n      className: \"detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/pokemon/' + prev,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 53\n      }\n    }, \"prev\")), /*#__PURE__*/React.createElement(Link, {\n      to: '/pokemon/' + next,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 53\n      }\n    }, \"next\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, inforPokemon.name), /*#__PURE__*/React.createElement(Row, {\n      gutter: [16, 16],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"gray\",\n      src: inforPokemon.sprites.front_default,\n      alt: \"abc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, detail.flavor_text_entries[0].flavor_text), /*#__PURE__*/React.createElement(Row, {\n      className: \"inforbasic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, \"height : \", inforPokemon.height), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }, \"width : \", inforPokemon.weight), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, \"experience : \", inforPokemon.base_experience), habitat(detail.habitat)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, \"abilities :\"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, inforPokemon.abilities.map((values, index) => /*#__PURE__*/React.createElement(Col, {\n      span: 11,\n      className: \"abilities\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/ability/' + values.ability.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, values.ability.name)))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, \"types :  \"), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, inforPokemon.types.map((values, index) => /*#__PURE__*/React.createElement(Col, {\n      span: 11,\n      className: \"abilities\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: '/type/' + values.type.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }, values.type.name))))))), /*#__PURE__*/React.createElement(Col, {\n      span: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    });\n  }\n}\n\nexport default observer(Detail);","map":{"version":3,"sources":["D:/pokemon/front_end/src/component/DetailPokemon/DetailPokemon.js"],"names":["React","useEffect","useState","Row","Col","callApidata","Link","ListEvolution","observer","show","List","Detail","props","habitat","detail","name","eve","string","then","res","data","evolves_from_species","console","log","addTodo","img","sprites","front_default","list","result","length","map","value","re","match","params","id","setIF","setN","setP","changelist","setD","inforPokemon","next","prev","undefined","flavor_text_entries","flavor_text","height","weight","base_experience","abilities","values","index","ability","types","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './DetailPokemon.css'\r\nimport { callApidata } from '../../api/callAPI';\r\nimport {Link} from 'react-router-dom'\r\nimport { ListEvolution } from './DPstore';\r\nimport { observer } from 'mobx-react'\r\nimport { show } from '../ShowPokemon/show';\r\nimport { List } from 'antd/lib/form/Form';\r\nfunction Detail(props){\r\n    function habitat(habitat){\r\n        if (habitat!==null){\r\n            return (\r\n                <Col span={12}><Link to={'/habitat/'+detail.habitat.name}>habitat : {detail.habitat.name}</Link></Col>\r\n            )\r\n        }\r\n    }\r\n    function eve(string){\r\n        callApidata(string,'pokemon-species').then(res=>{\r\n            if (res.data.evolves_from_species!==null){\r\n                let name=res.data.evolves_from_species.name\r\n                callApidata(name,'pokemon').then(res=>{\r\n                    console.log(res.data)\r\n                    ListEvolution.addTodo({name:res.data.name,img:res.data.sprites.front_default})\r\n                    eve(res.data.name)\r\n                })\r\n            }\r\n        })\r\n    }\r\n    function show(list){\r\n        let result=null\r\n        if (list.length>0){\r\n            result=list.map(value=>{\r\n                re\r\n            })\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        callApidata(props.match.params.id,'pokemon').then(res=>{\r\n            setIF(res.data)\r\n            callApidata(res.data.id+1,'pokemon').then(res=>{\r\n                setN(res.data.name)\r\n            })\r\n            callApidata(res.data.id-1,'pokemon').then(res=>{\r\n                setP(res.data.name)\r\n            })\r\n            ListEvolution.changelist([])\r\n            ListEvolution.addTodo({name:res.data.name,img:res.data.sprites.front_default})\r\n            eve(res.data.name)\r\n        })\r\n        callApidata(props.match.params.id,'pokemon-species').then(res=>{\r\n            setD(res.data)\r\n        })\r\n    },[props])\r\n    console.log(ListEvolution.list);\r\n    const [inforPokemon,setIF]=useState({})\r\n    const [detail,setD]=useState({})\r\n    const [next,setN]=useState('')\r\n    const [prev,setP]=useState('')\r\n    if (inforPokemon.sprites!== undefined && detail.habitat!== undefined){\r\n        return(\r\n\r\n            <Row  className=\"detail\">\r\n                <Col span={6} ></Col>\r\n                <Col span={12}>\r\n                        <Link to={'/pokemon/'+prev}><button>prev</button></Link>    \r\n                        <Link to={'/pokemon/'+next}><button>next</button></Link> \r\n                    <p>{inforPokemon.name}</p>\r\n                    <Row gutter={[16, 16]}>\r\n                        <Col span={12} > \r\n                            <img className=\"gray\" src={inforPokemon.sprites.front_default} alt=\"abc\"></img>\r\n                        </Col>\r\n                        <Col span={12}> \r\n                            <p>{detail.flavor_text_entries[0].flavor_text}</p>\r\n                            <Row className=\"inforbasic\" >\r\n                                <Col span={12}>height : {inforPokemon.height}</Col>\r\n                                <Col span={12}>width : {inforPokemon.weight}</Col>\r\n                                <Col span={12}>experience : {inforPokemon.base_experience}</Col>\r\n                                {habitat(detail.habitat)}\r\n                            </Row>\r\n                            <p>abilities :</p>\r\n                            <Row >\r\n                            {inforPokemon.abilities.map((values,index)=>\r\n                                <Col span={11} className=\"abilities\">\r\n                                    <Link to={'/ability/'+values.ability.name}>{values.ability.name}</Link>\r\n                                </Col>\r\n                            )}\r\n                            </Row>\r\n                            <p>types :  </p>\r\n                            <Row>\r\n                            {inforPokemon.types.map((values,index)=>\r\n                                <Col span={11} className=\"abilities\">\r\n                                    <Link to={'/type/'+values.type.name}>{values.type.name}</Link>\r\n                                </Col>\r\n                            )}\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col span={6} ></Col>\r\n            </Row>\r\n        )\r\n    } else {\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n    \r\n}\r\nexport default observer(Detail)"]},"metadata":{},"sourceType":"module"}
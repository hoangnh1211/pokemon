{"ast":null,"code":"import { types } from \"mobx-state-tree\";\nexport const abilitie = types.model({\n  name: types.optional(types.string, ''),\n  url: types.optional(types.string, '')\n});\nexport const sprite = types.model({\n  back_default: types.optional(types.string, ''),\n  back_shiny: types.optional(types.string, '')\n});\nexport const pokemon1 = types.model({\n  abilities: types.array(abilitie),\n  back_default: types.optional(types.string, ''),\n  back_shiny: types.optional(types.string, ''),\n  id: types.optional(types.number, 0),\n  name: types.optional(types.string, '')\n}).actions(self => ({\n  change(infor) {\n    self.abilities = infor.abilities;\n    self.back_default = infor.back_default;\n    self.back_shiny = infor.back_shiny;\n    self.id = infor.id;\n    self.name = infor.name;\n  }\n\n}));\nconst Evolution = types.model({\n  name: types.string,\n  img: types.optional(types.string, '')\n});\nconst Evolutions = types.model({\n  list: types.optional(types.array(Evolution), [])\n}).views(self => ({\n  get shop() {\n    return self.list.reverse();\n  }\n\n})).actions(self => {\n  function addTodo(Evolution) {\n    self.list.push(Evolution); // console.log(self.list)\n  }\n\n  function changelist(newList) {\n    self.list = newList;\n  }\n\n  return {\n    addTodo,\n    changelist\n  };\n});\nexport const ListEvolution = Evolutions.create();\nexport const pokemon = pokemon1.create();","map":{"version":3,"sources":["D:/pokemon/front_end/src/component/DetailPokemon/DPstore.js"],"names":["types","abilitie","model","name","optional","string","url","sprite","back_default","back_shiny","pokemon1","abilities","array","id","number","actions","self","change","infor","Evolution","img","Evolutions","list","views","shop","reverse","addTodo","push","changelist","newList","ListEvolution","create","pokemon"],"mappings":"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","sourcesContent":["import { types } from \"mobx-state-tree\";\r\n\r\nexport const abilitie=types.model({\r\n    name: types.optional(types.string,''),\r\n    url: types.optional(types.string,'')\r\n})\r\n\r\nexport const sprite=types.model({\r\n    back_default:types.optional(types.string,''),\r\n    back_shiny:types.optional(types.string,''),\r\n})\r\n\r\nexport const pokemon1=types.model({\r\n        abilities:types.array(abilitie),\r\n        back_default:types.optional(types.string,''),\r\n        back_shiny:types.optional(types.string,''),\r\n        id:types.optional(types.number,0),\r\n        name:types.optional(types.string,'')\r\n}).actions(self=>({\r\n    change(infor){\r\n        self.abilities=infor.abilities\r\n        self.back_default=infor.back_default\r\n        self.back_shiny=infor.back_shiny\r\n        self.id=infor.id\r\n        self.name=infor.name\r\n    }\r\n}))\r\n\r\nconst Evolution=types.model({\r\n    name:types.string,\r\n    img:types.optional(types.string,'')\r\n})\r\nconst Evolutions=types.model({\r\n    list:types.optional(types.array(Evolution),[])\r\n}).views((self) => ({\r\n    get shop() {\r\n        return self.list.reverse()\r\n    }\r\n})).actions( (self) => {\r\n    function addTodo(Evolution){\r\n        self.list.push(Evolution)\r\n        // console.log(self.list)\r\n    }\r\n    function  changelist(newList){\r\n        self.list=newList\r\n    }\r\n    return {\r\n        addTodo,\r\n        changelist\r\n    }\r\n})\r\nexport const ListEvolution=Evolutions.create()\r\nexport const pokemon=pokemon1.create()"]},"metadata":{},"sourceType":"module"}
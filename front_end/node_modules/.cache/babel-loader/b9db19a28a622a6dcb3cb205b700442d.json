{"ast":null,"code":"import { types } from \"mobx-state-tree\";\nexport const inf = types.model({\n  id: types.number,\n  img: types.optional(types.string, ''),\n  name: types.string\n});\nconst listin = types.model({\n  list: types.optional(types.array(inf), [])\n}).views(self => ({\n  get shop() {\n    return self.list.slice();\n  }\n\n})).actions(self => {\n  function addTodo(inf) {\n    self.list.push(inf); // console.log(self.list)\n  }\n\n  function changelist(newList) {\n    self.list = newList;\n  }\n\n  function setlist(name) {\n    console.log(name);\n    if (name === 'ten-az') self.list = self.list.sort(function (a, b) {\n      var x = a.name.toLowerCase();\n      var y = b.name.toLowerCase();\n\n      if (x < y) {\n        return -1;\n      }\n\n      if (x > y) {\n        return 1;\n      }\n\n      return 0;\n    });\n    if (name === 'ten-za') self.list = self.list.sort(function (a, b) {\n      var x = a.type.toLowerCase();\n      var y = b.name.toLowerCase();\n\n      if (x < y) {\n        return -1;\n      }\n\n      if (x > y) {\n        return 1;\n      }\n\n      return 0;\n    });\n    if (name === 'idtang') self.list = self.list.sort(function (a, b) {\n      return a.id - b.id;\n    });\n    if (name === 'idgiam') self.list = self.list.sort(function (a, b) {\n      return b.id - a.id;\n    });\n    self.list.map(value => {\n      console.log(value.name);\n    });\n  }\n\n  return {\n    addTodo,\n    changelist,\n    setlist\n  };\n});\nexport const listinf = listin.create();","map":{"version":3,"sources":["D:/pokemon/front_end/src/component/ShowPokemon/inforbasic.js"],"names":["types","inf","model","id","number","img","optional","string","name","listin","list","array","views","self","shop","slice","actions","addTodo","push","changelist","newList","setlist","console","log","sort","a","b","x","toLowerCase","y","type","map","value","listinf","create"],"mappings":"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","sourcesContent":["import { types } from \"mobx-state-tree\";\r\nexport const inf=types.model({\r\n    id:types.number,\r\n    img:types.optional(types.string,''),\r\n    name:types.string\r\n})\r\nconst listin=types.model({\r\n    list:types.optional(types.array(inf),[])\r\n})\r\n.views((self) => ({\r\n    get shop() {\r\n        return self.list.slice()\r\n    }\r\n}))\r\n.actions( (self) => {\r\n    function addTodo(inf){\r\n        self.list.push(inf)\r\n        // console.log(self.list)\r\n    }\r\n    function  changelist(newList){\r\n        self.list=newList\r\n    }\r\n    function setlist(name){\r\n        console.log(name)\r\n        if (name==='ten-az') self.list= self.list.sort(function(a, b){\r\n            var x = a.name.toLowerCase();\r\n            var y = b.name.toLowerCase();\r\n            if (x < y) {return -1;}\r\n            if (x > y) {return 1;}\r\n            return 0;})\r\n        if (name==='ten-za') self.list= self.list.sort(function(a, b){\r\n            var x = a.type.toLowerCase();\r\n            var y = b.name.toLowerCase();\r\n            if (x < y) {return -1;}\r\n            if (x > y) {return 1;}\r\n            return 0;})\r\n        if (name==='idtang') self.list= self.list.sort(function(a, b){return a.id - b.id})\r\n        if (name==='idgiam') self.list= self.list.sort(function(a, b){return b.id - a.id})\r\n        self.list.map(value=>{console.log(value.name)})\r\n    }\r\n    return {\r\n        addTodo,\r\n        changelist,\r\n        setlist\r\n    }\r\n})\r\nexport const listinf=listin.create()"]},"metadata":{},"sourceType":"module"}